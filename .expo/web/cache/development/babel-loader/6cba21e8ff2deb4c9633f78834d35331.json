{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\W44903\\\\Documents\\\\Develop\\\\App_Development\\\\Goal-manager\\\\App.js\";\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nexport default function App() {\n  var _this = this;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      inputGoal = _useState2[0],\n      setInputGoal = _useState2[1];\n\n  var _useState3 = useState(1),\n      _useState4 = _slicedToArray(_useState3, 2),\n      count = _useState4[0],\n      setCount = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      goalList = _useState6[0],\n      setGoalList = _useState6[1];\n\n  var inputGoalHandler = function inputGoalHandler(input) {\n    setInputGoal(input);\n  };\n\n  var addGoal = function addGoal() {\n    setGoalList([].concat(_toConsumableArray(goalList), [{\n      key: Math.random.toString(),\n      value: count + \". \" + inputGoal\n    }]));\n    setCount(count + 1);\n  };\n\n  return React.createElement(View, {\n    style: styles.screen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.input_container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }, React.createElement(TextInput, {\n    placeholder: \"Your goal\",\n    style: styles.input,\n    onChangeText: inputGoalHandler,\n    value: inputGoal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }), React.createElement(Button, {\n    title: \"ADD\",\n    onPress: addGoal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  })), React.createElement(FlatList, {\n    data: goalList,\n    renderItem: function renderItem(itemData) {\n      return React.createElement(View, {\n        style: styles.goalList,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }\n      }, React.createElement(Text, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 23\n        }\n      }, itemData.item.value));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }));\n}\nvar styles = StyleSheet.create({\n  screen: {\n    padding: 50\n  },\n  input_container: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between'\n  },\n  input: {\n    width: '87%',\n    borderColor: \"black\",\n    borderWidth: 1,\n    padding: 10\n  },\n  goalList: {\n    borderWidth: 1,\n    marginVertical: 7,\n    padding: 10,\n    width: '87%',\n    backgroundColor: '#99FFFF'\n  }\n});","map":{"version":3,"sources":["C:/Users/W44903/Documents/Develop/App_Development/Goal-manager/App.js"],"names":["React","useState","App","inputGoal","setInputGoal","count","setCount","goalList","setGoalList","inputGoalHandler","input","addGoal","key","Math","random","toString","value","styles","screen","input_container","itemData","item","StyleSheet","create","padding","flexDirection","alignItems","justifyContent","width","borderColor","borderWidth","marginVertical","backgroundColor"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;;;;;AAGA,eAAe,SAASC,GAAT,GAAe;AAAA;;AAAA,kBAEMD,QAAQ,CAAC,EAAD,CAFd;AAAA;AAAA,MAErBE,SAFqB;AAAA,MAEVC,YAFU;;AAAA,mBAIFH,QAAQ,CAAC,CAAD,CAJN;AAAA;AAAA,MAIrBI,KAJqB;AAAA,MAIdC,QAJc;;AAAA,mBAMIL,QAAQ,CAAC,EAAD,CANZ;AAAA;AAAA,MAMrBM,QANqB;AAAA,MAMXC,WANW;;AAQ5B,MAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAAAC,KAAK,EAAI;AAChCN,IAAAA,YAAY,CAACM,KAAD,CAAZ;AACD,GAFD;;AAIA,MAAMC,OAAO,GAAG,SAAVA,OAAU,GAAM;AACpBH,IAAAA,WAAW,8BAAKD,QAAL,IAAe;AAACK,MAAAA,GAAG,EAAEC,IAAI,CAACC,MAAL,CAAYC,QAAZ,EAAN;AAA+BC,MAAAA,KAAK,EAAEX,KAAK,GAAG,IAAR,GAAeF;AAArD,KAAf,GAAX;AACAG,IAAAA,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;AAGD,GALD;;AAOA,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEY,MAAM,CAACC,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAED,MAAM,CAACE,eAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AACE,IAAA,WAAW,EAAC,WADd;AAEE,IAAA,KAAK,EAAEF,MAAM,CAACP,KAFhB;AAGE,IAAA,YAAY,EAAED,gBAHhB;AAIE,IAAA,KAAK,EAAEN,SAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAOE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,KAAd;AACE,IAAA,OAAO,EAAEQ,OADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CADF,EAYE,oBAAC,QAAD;AACE,IAAA,IAAI,EAAEJ,QADR;AAEE,IAAA,UAAU,EAAE,oBAAAa,QAAQ;AAAA,aACR,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEH,MAAM,CAACV,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAOa,QAAQ,CAACC,IAAT,CAAcL,KAArB,CADF,CADQ;AAAA,KAFtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZF,CADF;AAsBD;AAED,IAAMC,MAAM,GAAGK,UAAU,CAACC,MAAX,CAAkB;AAC/BL,EAAAA,MAAM,EAAE;AACNM,IAAAA,OAAO,EAAE;AADH,GADuB;AAK/BL,EAAAA,eAAe,EAAE;AACfM,IAAAA,aAAa,EAAE,KADA;AAEfC,IAAAA,UAAU,EAAE,QAFG;AAGfC,IAAAA,cAAc,EAAE;AAHD,GALc;AAW/BjB,EAAAA,KAAK,EAAE;AACLkB,IAAAA,KAAK,EAAE,KADF;AAELC,IAAAA,WAAW,EAAE,OAFR;AAGLC,IAAAA,WAAW,EAAE,CAHR;AAILN,IAAAA,OAAO,EAAE;AAJJ,GAXwB;AAkB/BjB,EAAAA,QAAQ,EAAE;AACRuB,IAAAA,WAAW,EAAE,CADL;AAERC,IAAAA,cAAc,EAAE,CAFR;AAGRP,IAAAA,OAAO,EAAE,EAHD;AAIRI,IAAAA,KAAK,EAAE,KAJC;AAKRI,IAAAA,eAAe,EAAE;AALT;AAlBqB,CAAlB,CAAf","sourcesContent":["import React, { useState } from 'react';\nimport { StyleSheet, Text, View, TextInput, Button, ScrollView, FlatList } from 'react-native';\n\nexport default function App() {\n  // user's goal\n  const [inputGoal, setInputGoal] = useState(\"\");\n  // user's goal order\n  const [count, setCount] = useState(1);\n  // list of goals of user\n  const [goalList, setGoalList] = useState([]);\n\n  const inputGoalHandler = input => {\n    setInputGoal(input);\n  } \n\n  const addGoal = () => {\n    setGoalList([...goalList, {key: Math.random.toString() , value: count + \". \" + inputGoal}]);\n    setCount(count + 1);\n    // difference between above and below code\n    //setGoalList(curr => [...curr, inputGoal]);\n  }\n\n  return (\n    <View style={styles.screen}>\n      <View style={styles.input_container}>\n        <TextInput \n          placeholder=\"Your goal\"  \n          style={styles.input}\n          onChangeText={inputGoalHandler} \n          value={inputGoal}  \n        />\n        <Button title=\"ADD\"\n          onPress={addGoal}       \n        />\n      </View>\n      <FlatList \n        data={goalList} \n        renderItem={itemData => \n                    <View style={styles.goalList}>\n                      <Text>{itemData.item.value}</Text>\n                    </View>}>\n      </FlatList>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  screen: {\n    padding: 50\n  },\n\n  input_container: {\n    flexDirection: 'row', \n    alignItems: 'center', \n    justifyContent: 'space-between'\n  },\n  \n  input: {\n    width: '87%',\n    borderColor: \"black\", \n    borderWidth: 1, \n    padding: 10\n  },\n\n  goalList: {\n    borderWidth: 1,\n    marginVertical: 7,\n    padding: 10,\n    width: '87%',\n    backgroundColor: '#99FFFF'\n  }\n});\n"]},"metadata":{},"sourceType":"module"}