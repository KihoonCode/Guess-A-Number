{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\W44903\\\\Documents\\\\Develop\\\\App_Development\\\\Goal-manager\\\\App.js\";\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport GoalsInput from \"./components/GoalsInput\";\nimport GoalItem from \"./components/GoalItem\";\nexport default function App() {\n  var _this = this;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      inputGoal = _useState2[0],\n      setInputGoal = _useState2[1];\n\n  var _useState3 = useState(1),\n      _useState4 = _slicedToArray(_useState3, 2),\n      count = _useState4[0],\n      setCount = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      goalList = _useState6[0],\n      setGoalList = _useState6[1];\n\n  var inputGoalHandler = function inputGoalHandler(input) {\n    setInputGoal(input);\n  };\n\n  var addGoal = function addGoal() {\n    setGoalList([].concat(_toConsumableArray(goalList), [{\n      id: Math.random().toString(),\n      value: count + \". \" + inputGoal\n    }]));\n    setCount(count + 1);\n    setInputGoal(\"\");\n  };\n\n  return React.createElement(View, {\n    style: styles.screen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.input_container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 10\n    }\n  }, React.createElement(TextInput, {\n    placeholder: \"Your goal\",\n    style: styles.input,\n    onChangeText: inputGoalHandler,\n    value: inputGoal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }), React.createElement(Button, {\n    title: \"ADD\",\n    onPress: addGoal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  })), React.createElement(FlatList, {\n    data: goalList,\n    renderItem: function renderItem(itemData) {\n      return React.createElement(View, {\n        style: styles.goalList,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 16\n        }\n      }, React.createElement(Text, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 19\n        }\n      }, itemData.item.value));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 10\n    }\n  }));\n}\nvar styles = StyleSheet.create({\n  screen: {\n    padding: 50\n  },\n  input_container: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between'\n  },\n  input: {\n    width: '87%',\n    borderColor: \"black\",\n    borderWidth: 1,\n    padding: 10\n  },\n  goalList: {\n    borderWidth: 1,\n    marginVertical: 6,\n    padding: 10,\n    width: '87%',\n    backgroundColor: '#99FFFF'\n  }\n});","map":{"version":3,"sources":["C:/Users/W44903/Documents/Develop/App_Development/Goal-manager/App.js"],"names":["React","useState","GoalsInput","GoalItem","App","inputGoal","setInputGoal","count","setCount","goalList","setGoalList","inputGoalHandler","input","addGoal","id","Math","random","toString","value","styles","screen","input_container","itemData","item","StyleSheet","create","padding","flexDirection","alignItems","justifyContent","width","borderColor","borderWidth","marginVertical","backgroundColor"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport {\n   StyleSheet,\n   Text,\n   View,\n   TextInput,\n   Button,\n   FlatList\n} from 'react-native';\nimport GoalsInput from './components/GoalsInput';\nimport GoalItem from './components/GoalItem'\n\n\nexport default function App() {\n   // user's goal\n   const [inputGoal, setInputGoal] = useState(\"\");\n   // user's goal order\n   const [count, setCount] = useState(1);\n   // list of goals of user\n   const [goalList, setGoalList] = useState([]);\n\n   const inputGoalHandler = input => {\n      setInputGoal(input);\n   }\n\n   const addGoal = () => {\n      setGoalList([...goalList, { id: Math.random().toString(), value: count + \". \" + inputGoal }]);\n      setCount(count + 1);\n      setInputGoal(\"\");\n      // difference between above and below code\n      //setGoalList(curr => [...curr, inputGoal]);\n   }\n\n   return (\n      <View style={styles.screen}>\n         <View style={styles.input_container}>\n            <TextInput\n               placeholder=\"Your goal\"\n               style={styles.input}\n               onChangeText={inputGoalHandler}\n               value={inputGoal}\n            />\n            <Button title=\"ADD\"\n               onPress={addGoal}\n            />\n         </View>\n         <FlatList\n            data={goalList}\n            renderItem={itemData =>\n               <View style={styles.goalList}>\n                  <Text>{itemData.item.value}</Text>\n               </View>}>\n         </FlatList>\n      </View>\n   );\n}\n\nconst styles = StyleSheet.create({\n   screen: {\n      padding: 50\n   },\n\n   input_container: {\n      flexDirection: 'row',\n      alignItems: 'center',\n      justifyContent: 'space-between'\n   },\n\n   input: {\n      width: '87%',\n      borderColor: \"black\",\n      borderWidth: 1,\n      padding: 10\n   },\n\n   goalList: {\n      borderWidth: 1,\n      marginVertical: 6,\n      padding: 10,\n      width: '87%',\n      backgroundColor: '#99FFFF'\n   }\n});\n"]},"metadata":{},"sourceType":"module"}